{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Phonebook/PhoneBookInput/PhonebookInput.module.css","components/Filter/Filter.module.css","components/Phonebook/PhoneBookInput/PhonebookInput.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","components/Contacts/ContactsListItem/ContactsListItem.js","components/Contacts/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PhonebookInput","name","number","onSubmitContacts","onChangeInpuntName","className","style","form","onSubmit","formLabel","formInput","type","pattern","title","required","onChange","value","btn","Phonebook","addContacts","useState","contact","setContact","e","target","prev","preventDefault","Filter","filter","onChangeFilter","ContactsListItem","contacts","onDeleteContact","map","id","toLocaleLowerCase","includes","trim","formListItem","text","onClick","Contacts","contactsList","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","textAlign","some","alert","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ff78dc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__164cS\",\"formListItem\":\"Contacts_formListItem__1xraD\",\"text\":\"Contacts_text__100KC\",\"btn\":\"Contacts_btn__2IQbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookInput_form__3Rwvo\",\"formLabel\":\"PhonebookInput_formLabel__1kmJo\",\"formInput\":\"PhonebookInput_formInput__KfFmH\",\"btn\":\"PhonebookInput_btn__1IcXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"Filter_formLabel__1DpJ4\",\"formInput\":\"Filter_formInput__dFLUB\"};","import style from './PhonebookInput.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst PhonebookInput = ({name, number, onSubmitContacts, onChangeInpuntName}) => {\r\n    return (\r\n        <form className={style.form} onSubmit={onSubmitContacts}>\r\n            <label className={style.formLabel}>\r\n                Name\r\n            <input\r\n                className={style.formInput}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={onChangeInpuntName}\r\n                value={name}\r\n            />\r\n            </label>\r\n            <label className={style.formLabel}>\r\n                Number\r\n                <input\r\n                className={style.formInput}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={onChangeInpuntName}\r\n                value={number}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={style.btn}>ADD contacts</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PhonebookInput;\r\n\r\nPhonebookInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n}","import React, { useState} from 'react';\r\nimport PhonebookInput from './PhoneBookInput/PhonebookInput';\r\n\r\n\r\nconst Phonebook = ({addContacts}) => {\r\n    const [contact, setContact] = useState({\r\n        name: '',\r\n        number: ''\r\n    });\r\n\r\n    const onChangeInpuntName = (e) => {\r\n        const {name, value} = e.target\r\n        setContact((prev)=>({...prev, [name]: value}))\r\n    }\r\n    const onSubmitContacts = (e) => {\r\n        e.preventDefault();\r\n        addContacts(contact.name, contact.number)\r\n        setContact({name: \"\", number: \"\"}) \r\n    }\r\n    const {name, number} = contact\r\n    return (\r\n        <PhonebookInput \r\n            name={name} \r\n            number={number} \r\n            onChangeInpuntName={onChangeInpuntName} \r\n            onSubmitContacts={onSubmitContacts}/>\r\n    );\r\n}\r\n\r\nexport default Phonebook;\r\n\r\n","import style from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({filter, onChangeFilter}) => {\r\n    return (\r\n        <label className={style.formLabel}>\r\n                Find contacts by name\r\n                <input\r\n                className={style.formInput}\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    onChange={onChangeFilter}\r\n                    value={filter}\r\n                />\r\n            </label>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n}","import style from '../Contacts.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsListItem = ({filter, contacts, onDeleteContact}) => {\r\n    return (\r\n       filter ? \r\n       contacts.map(({name, number, id}) => {\r\n        if (name.toLocaleLowerCase().includes(filter.trim().toLocaleLowerCase())) {\r\n           return <li className={style.formListItem} key={id}>\r\n                        <p className={style.text}>{name}: {number}</p>\r\n                        <button className={style.btn} type=\"button\" onClick={onDeleteContact} id={id}>Delete</button>\r\n                    </li> \r\n        }\r\n       }\r\n   ) :\r\n        contacts.map(({name, number, id})=>(\r\n                <li className={style.formListItem} key={id}>\r\n                    <p className={style.text}>{name}: {number}</p>\r\n                    <button type=\"button\" className={style.btn} onClick={onDeleteContact} id={id}>Delete</button>\r\n                </li>\r\n            \r\n\r\n        )\r\n        )\r\n    );\r\n}\r\n\r\nexport default ContactsListItem;\r\n\r\nContactsListItem.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    contacts: PropTypes.array,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string\r\n}","import ContactsListItem from \"./ContactsListItem/ContactsListItem\";\r\nimport style from './Contacts.module.css'\r\n\r\nconst Contacts = ({filter, contacts, onDeleteContact}) => {\r\n    \r\n    return (\r\n        <>\r\n            <ul className={style.contactsList}>\r\n                <ContactsListItem \r\n                    contacts={contacts}\r\n                    filter={filter}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contacts;","\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\n\n\nconst App = () => {\n  const [contacts, setContacts] = useState(JSON.parse(window.localStorage.getItem(\"contacts\")) || []);\n  const [filter, setFilter] = useState(\"\")\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n  }, [contacts])\n  \n  const addContacts = (name, number) => {\n    const checkContacts = contacts.some((contact)=>{\n      return contact.name.trim().toLocaleLowerCase() === name.trim().toLocaleLowerCase()\n    }) \n    if (!checkContacts){\n      setContacts((prev) => ([...prev, {name, number, id: uuidv4()}]));\n    } else {\n      alert(`${name} is already in contacts`)\n    }\n  }\n  const onChangeFilter = (e) => {\n    const {value} = e.target\n    setFilter(value)\n  }\n  const onDeleteContact = (e) => {\n    const{id} = e.target\n    setContacts((prev)=>(prev.filter((contact)=>contact.id !== id)))\n}\n  return (\n    <div>\n        <h1 style={{textAlign: \"center\"}}>Phonebook</h1>\n        <Phonebook addContacts={addContacts}/>\n\n        <h2 style={{textAlign: \"center\"}}>Contacts</h2>\n        <Filter \n            filter={filter}\n            onChangeFilter={onChangeFilter}\n        />\n        <Contacts\n            filter={filter} \n            contacts={contacts}\n            onDeleteContact={onDeleteContact}\n        />\n      </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}